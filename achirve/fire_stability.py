import analysis

# Define the original gantt and fixed_gantt lists
gantt = [
    [[0, 76, 8], [76, 105, 0], [115, 201, 7], [201, 244, 1], [244, 250, 4], [250, 263, 9], [263, 334, 3], [425, 462, 6], [462, 509, 5], [516, 601, 2]],
    [[0, 81, 3], [84, 86, 5], [86, 171, 9], [171, 249, 0], [249, 378, 8], [379, 425, 6], [425, 516, 2], [516, 562, 7], [562, 584, 4], [592, 620, 1]],
    [[0, 84, 5], [84, 115, 7], [115, 210, 3], [210, 224, 4], [249, 258, 0], [258, 348, 1], [348, 409, 9], [506, 591, 8], [591, 604, 6], [640, 714, 2]],
    [[138, 233, 5], [258, 294, 0], [379, 455, 8], [462, 523, 6], [523, 592, 1], [601, 640, 2], [697, 723, 4], [744, 796, 9], [816, 914, 3], [929, 1008, 7]],
    [[294, 343, 0], [348, 423, 1], [423, 522, 3], [574, 580, 5], [636, 668, 7], [723, 792, 4], [792, 818, 8], [818, 908, 9], [963, 1018, 6], [1032, 1065, 2]],
    [[86, 138, 5], [343, 354, 0], [455, 506, 8], [562, 636, 7], [636, 697, 4], [697, 744, 9], [788, 809, 6], [809, 819, 2], [834, 880, 1], [987, 1030, 3]],
    [[354, 416, 0], [416, 423, 9], [509, 574, 5], [574, 583, 3], [602, 642, 8], [668, 756, 7], [756, 788, 6], [788, 834, 1], [834, 923, 2], [965, 1018, 4]],
    [[416, 472, 0], [580, 605, 5], [642, 731, 8], [731, 816, 3], [819, 831, 2], [844, 893, 4], [893, 929, 7], [933, 963, 6], [963, 1035, 1], [1035, 1080, 9]],
    [[233, 281, 5], [423, 487, 9], [487, 531, 0], [583, 635, 3], [714, 804, 2], [804, 823, 7], [823, 844, 4], [844, 933, 6], [933, 1007, 8], [1035, 1065, 1]],
    [[281, 353, 5], [423, 434, 1], [487, 563, 9], [563, 584, 0], [591, 602, 8], [809, 841, 6], [841, 889, 7], [893, 965, 4], [965, 987, 3], [987, 1032, 2]]
]  # fmt:skip

fixed_gantt = [
    [[0, 76, 8], [76, 105, 0], [115, 201, 7], [201, 244, 1], [244, 250, 4], [250, 263, 9], [263, 334, 3]],
    [[0, 81, 3], [84, 86, 5], [86, 171, 9], [171, 249, 0], [249, 378, 8]],
    [[0, 84, 5], [84, 115, 7], [115, 210, 3], [210, 224, 4], [249, 258, 0], [258, 348, 1], [348, 409, 9]],
    [[138, 233, 5], [258, 294, 0]],
    [[294, 343, 0], [348, 423, 1]],
    [[86, 138, 5], [343, 354, 0]],
    [[354, 416, 0]],
    [],
    [[233, 281, 5]],
    [[281, 353, 5]]
]  # fmt:skip

# Create changed_gantt by removing elements in fixed_gantt from gantt
changed_gantt = []
for gantt_job, fixed_job in zip(gantt, fixed_gantt):
    # Remove elements in fixed_job from gantt_job
    changed_job = [operation for operation in gantt_job if operation not in fixed_job]
    changed_gantt.append(changed_job)

# Output the changed_gantt
analysis.plot_gantt(changed_gantt, 10, 10, "after rescheduled", 379,)  # fmt: skip

# fmt: off
# init_gantt = [
#     [[0, 76, 8], [76, 113, 6], [113, 199, 7], [199, 242, 1], [242, 248, 4], [248, 277, 0], [282, 353, 3], [353, 438, 2], [438, 451, 9], [541, 588, 5],],
#     [[0, 46, 6], [46, 127, 3], [127, 129, 5], [129, 198, 8], [199, 245, 7], [245, 336, 2], [336, 421, 9], [421, 443, 4], [443, 521, 0], [635, 663, 1],],
# ]
# gantt = [
#     [[0, 76, 8], [76, 113, 6], [113, 199, 7], [199, 242, 1], [242, 248, 4], [248, 277, 0], [282, 353, 3], [353, 438, 2], [438, 451, 9], [541, 588, 5],],
#     [[0, 46, 6], [46, 127, 3], [127, 129, 5], [129, 198, 8], [199, 245, 7], [245, 336, 2], [336, 421, 9], [421, 443, 4], [443, 521, 0], [635, 663, 1],],
# ]
# #  fmt: on
# rank_diff_function = 0
# for machine in range(len(gantt)):
#     for operation in range(len(gantt[machine])):
#         job_number = init_gantt[machine][operation][2]
#         for operation2 in range(len(gantt[machine])):
#             if job_number == gantt[machine][operation2][2]:
#                 rank_diff = operation - operation2
#                 rank_diff_function += (rank_diff)**2 / (operation2 + 1) ** 1.25

# print(rank_diff_function)


# import matplotlib.pyplot as plt
# import numpy as np
# import pandas as pd

# # データセット
# data1 = [1110, 1256, 1222, 1272, 1134, 1319, 1242, 1184, 1232, 1289, 1250, 1200, 1317, 1230, 1298, 1317, 1183, 1219,
#         1242, 1244, 1282, 1180, 1235, 1176, 1176, 1146, 1259, 1165, 1226, 1309, 1185, 1235, 1291, 1186, 1199, 1310,
#         1317, 1227, 1265, 1232, 1266, 1203, 1260, 1185, 1299, 1155, 1163, 1167, 1290, 1178]  # fmt: skip

# data2 = [1.127606636351571, 13.374169518714233, 7.663289966372262, 16.851167341426944, 5.180342533325938, 5.695214492674725,
#         7.093918703785786, 4.961683072287148, 4.756938100383968, 15.822748361797263, 6.347811028883369, 6.738670258297591,
#         12.89613409666727, 6.509578607691398, 8.703250567946402, 11.416447289748998, 6.1340920274992365, 6.936878890101797,
#         6.169524256270913, 13.570669092248886, 10.381778084915618, 8.726504823083914, 5.623461205363456, 10.680429376294375,
#         7.627396939852422, 6.172637316078576, 9.997479889546916, 4.3464970466594846, 10.073957005988198, 5.253193227225247,
#         7.699256137879281, 6.7973402243006955, 17.592509549309035, 5.319103473851913, 4.806305366039594, 6.873477779129109,
#         8.286069345682716, 6.030813775667393, 14.656698416422222, 9.988763928419152, 7.346060688270995, 4.715493737742376,
#         7.024740482800034, 8.727878235516624, 5.895798424609361, 7.667137080006519, 6.269446143052913, 7.0023223736602915,
#         9.472765201141254, 6.226832231266084]  # fmt: skip

# df = pd.DataFrame(
#     data2,
# )

# df_standardized = (df - df.mean()) / df.std()
# # プロット
# plt.figure(figsize=(12, 6))

# # Data1 の分布
# plt.subplot(1, 2, 1)
# plt.hist(data1, bins=15, color="skyblue", edgecolor="black")
# plt.title("Distribution of Data1")
# plt.xlabel("Value")
# plt.ylabel("Frequency")

# # Data2 の分布
# plt.subplot(1, 2, 2)
# plt.hist(df_standardized, bins=15, color="lightgreen", edgecolor="black")
# plt.title("Distribution of Data2")
# plt.xlabel("Value")
# plt.ylabel("Frequency")

# # グラフの表示
# plt.tight_layout()
# plt.show()
